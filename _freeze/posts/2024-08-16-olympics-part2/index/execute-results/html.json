{
  "hash": "02b1725ae4568fa9139c918284c17f9c",
  "result": {
    "markdown": "---\ntitle: \"Paris 2024: Olympic debrief\"\noutput:\n  html_document:\n    code_folding: show\nauthor: Liam D. Bailey\ndate: '2024-08-16'\ndescription: \"Who had the best performance?\"\ncategories: [R, Data viz]\nimage: \"feature.png\"\n---\n\n::: {.cell}\n\n:::\n\n\n## Introduction: What have we learnt so far?\n\n---\n\nIn [my last post](https://liamdbailey.com/posts/2024-08-10-olympics-part1/), we saw how medal inflation and economic advantage can make it tricky to properly assess a country's Olympic performance. Now that we have the final results from Paris 2024, we can use our new found knowledge to find the countries that over-(and under) performed at this year's event.\n\n</br>\n\n## The data\n\n---\n\nWe start out where we left off in the last blog with data on medal *percentages* between 1996 and 2016. We will add to this with new results from Paris 2024. To include information on GDP, we will use data from the [World Bank](https://databank.worldbank.org/source/world-development-indicators).\n\n</br>\n\n## The basics: Clean the data and add some context\n\n---\n\nPackages this time are: `dplyr`, `tidyr`, `readr`, and `lay` to work with data and `ggplot2` and `shadowtext` to create plots and `scales` and `gt` when building tables. This time we'll also include `spaMM`, which we'll use for some basic statistical modelling. Again, `countrycode` is needed to convert NOC to ISO3c.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Data wrangling\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(readr)\nlibrary(lay)\nlibrary(countrycode)\n## Plots and tables\nlibrary(ggplot2)\nlibrary(shadowtext)\nlibrary(geomtextpath)\nlibrary(scales)\nlibrary(gt)\n## Stats\nlibrary(spaMM)\n```\n:::\n\n\nFirst, let's read in the data we finished with last time and the new data from Paris.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Load data\n(historical_data <- readr::read_csv(\"./data/training_data.csv\", show_col_type = FALSE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,463 × 6\n    Year ISO3c country       perc_Gold perc_Silver perc_Bronze\n   <dbl> <chr> <chr>             <dbl>       <dbl>       <dbl>\n 1  2016 USA   United States     15.0       12.1         10.6 \n 2  2016 GBR   Great Britain      8.79       7.52         4.72\n 3  2016 CHN   China              8.47       5.88         7.22\n 4  2016 RUS   Russia             6.19       5.56         5.56\n 5  2016 DEU   Germany            5.54       3.27         4.17\n 6  2016 JPN   Japan              3.91       2.61         5.83\n 7  2016 FRA   France             3.26       5.88         3.89\n 8  2016 KOR   South Korea        2.93       0.980        2.5 \n 9  2016 ITA   Italy              2.61       3.92         2.22\n10  2016 AUS   Australia          2.61       3.59         2.78\n# ℹ 2,453 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nparis <- readr::read_csv(\"./data/paris_results.csv\", show_col_types = FALSE) |> \n  mutate(across(Gold:Total, \\(x) tidyr::replace_na(x, 0)),\n         ISO3c_countrycode = countrycode::countrycode(NOC, origin = \"ioc\", destination = \"iso3c\"),\n         ISO3c = case_when(!is.na(ISO3c_countrycode) ~ ISO3c_countrycode,\n                           NOC == \"KOS\" ~ \"XKX\",\n                           NOC == \"SIN\" ~ \"SGP\",\n                           is.na(ISO3c_countrycode) ~ NOC),\n         country = countrycode::countrycode(ISO3c, origin = \"iso3c\", destination = \"country.name\")) |> \n  select(country, ISO3c, Gold:Total)\n\nparis\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 92 × 6\n   country        ISO3c  Gold Silver Bronze Total\n   <chr>          <chr> <dbl>  <dbl>  <dbl> <dbl>\n 1 United States  USA      40     44     42   126\n 2 China          CHN      40     27     24    91\n 3 Japan          JPN      20     12     13    45\n 4 Australia      AUS      18     19     16    53\n 5 France         FRA      16     26     22    64\n 6 Netherlands    NLD      15      7     12    34\n 7 United Kingdom GBR      14     22     29    65\n 8 South Korea    KOR      13      9     10    32\n 9 Italy          ITA      12     13     15    40\n10 Germany        DEU      12     13      8    33\n# ℹ 82 more rows\n```\n\n\n:::\n:::\n\n\nWe know from last time that accounting for the *number of available medals* is important. There were 71 more medals available at Paris 2024 than Rio 2016 and we need to reflect that in the data!\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntotal_gold <- sum(paris$Gold)\ntotal_silver <- sum(paris$Silver)\ntotal_bronze <- sum(paris$Bronze)\ntotal <- sum(paris$Total)\n\nparis_perc <- paris |> \n  mutate(perc_Gold = (Gold/total_gold)*100,\n         perc_Silver = (Silver/total_silver)*100,\n         perc_Bronze = (Bronze/total_bronze)*100,\n         perc_Total = (Total/total)*100) |> \n  select(country, ISO3c, perc_Gold:perc_Total)\n\nparis_perc\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 92 × 6\n   country        ISO3c perc_Gold perc_Silver perc_Bronze perc_Total\n   <chr>          <chr>     <dbl>       <dbl>       <dbl>      <dbl>\n 1 United States  USA       12.2        13.3        10.9       12.1 \n 2 China          CHN       12.2         8.18        6.23       8.72\n 3 Japan          JPN        6.08        3.64        3.38       4.31\n 4 Australia      AUS        5.47        5.76        4.16       5.08\n 5 France         FRA        4.86        7.88        5.71       6.13\n 6 Netherlands    NLD        4.56        2.12        3.12       3.26\n 7 United Kingdom GBR        4.26        6.67        7.53       6.23\n 8 South Korea    KOR        3.95        2.73        2.60       3.07\n 9 Italy          ITA        3.65        3.94        3.90       3.83\n10 Germany        DEU        3.65        3.94        2.08       3.16\n# ℹ 82 more rows\n```\n\n\n:::\n:::\n\n\n</br>\n\n## Predicted performance\n\n---\n\nWe also know that medal performance is strongly correlated to a countries GDP. To assess current performance, we can model the relationship between GDP and Olympic results using data from previous years (1996 - 2016) and use it to predict outcomes for 2024. The difference between predicted and actual scores allows us to identify those countries that performed better (or worse) than expected.\n\nThe first sticking point we encounter is that Olympic performance is actually *three* variables: Gold, Silver, and Bronze medals. To model things more easily, we want to convert these into a single score. To make sure this single score reflects the difference in importance between different medal types we can use a weighted mean. Here we'll consider gold medals to be 3x more valuable than silver, and silver as 3x more valuable than bronze.\n\n$(Gold*\\frac{9}{13} + Silver*\\frac{3}{13} + Bronze*\\frac{1}{13})$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhistorical_data_score <- historical_data |>\n  filter(Year >= 1996) |> \n  mutate(score = lay::lay(pick(c(perc_Gold, perc_Silver, perc_Bronze)),\n                               \\(x) sum(x * c(9/13, 3/13, 1/13))))\n```\n:::\n\n\nRanking countries using this single Olympic Score&trade; returns similar results to using traditional medal rankings (see Appendix), and gives us a good metric to work with moving forward.\n\nNow that we have a single response variable for our model, we then need to add GDP as a predictor. In the previous blog we considered GDP *in the current Olympic year*. Because we don't have official GDP statistics for 2024, let's adjust this a bit to use GDP of the year preceding the Olympics. I expect GDP to be very strongly temporally auto-correlated (i.e. data from one year is related to data in the previous year) so this shouldn't cause too many problems.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nGDP <- readr::read_csv(\"./data/GDP_data.csv\", skip = 4, show_col_types = FALSE) |> \n  ## Pivot longer to allow us to left join\n  tidyr::pivot_longer(cols = `1960`:`2023`, names_to = \"year\", values_to = \"gdp\") |> \n  ## Convert year to year + 1 to join with Olympic data from the *following year*\n  mutate(year = as.numeric(year) + 1) |>\n  janitor::clean_names() |> \n  select(country_code:indicator_name, year, gdp) |> \n  ## Remove countries with no GDP data\n  filter(!is.na(gdp)) |> \n  mutate(gdp_bil = gdp/1e9) |> \n  select(country_code, year, gdp_bil)\n\nhistorical_data_gdp <- historical_data_score |>\n  ## Join in GDP data\n  left_join(GDP, by = c(\"ISO3c\" = \"country_code\", \"Year\" = \"year\")) |> \n  filter(!is.na(gdp_bil))\n\nprint(paste(\"Correlation Olympic score and GDP:\", round(cor(historical_data_gdp$score, historical_data_gdp$gdp_bil), 2)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Correlation Olympic score and GDP: 0.76\"\n```\n\n\n:::\n:::\n\n\nUnsurprisingly, our single Olympic Score&trade; is strongly correlated with GDP (0.76), with countries that have higher GDP tending to have a higher Olympic Score&trade;.\n\nNow we can use the package `spaMM` to fit a linear mixed-effects model. We don't need to go into the statistical details here, but basically this model allows us to estimate the effect of GDP on Olympic score but taking into account that each Olympic games has its own idiosyncrasies that will affect results. This model will be the basis for our Paris assessment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- spaMM::fitme(score ~ gdp_bil + (1|Year), data = historical_data_gdp)\n```\n:::\n\n\n</br>\n\n## Actual results\n\n---\n\nLet's convert our Paris data into a comparable format to our historical data by calculating the single Olympic Score&trade; and adding GDP from the previous year. Then we can use our model from above to include *expected* medal score given known GDP.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nparis_perc_gdp <- paris_perc |> \n  mutate(score = lay::lay(pick(c(perc_Gold, perc_Silver, perc_Bronze)), \\(x) sum(x * c(9/13, 3/13, 1/13)))) |> \n  left_join(GDP |> \n              filter(year == 2023) |> \n              select(-year), by = c(\"ISO3c\" = \"country_code\")) |> \n  filter(!is.na(gdp_bil))\n\nparis_predicted <- paris_perc_gdp\nparis_predicted$exp_score <- as.numeric(predict(model, newdata = paris_predicted, re.form = NA))\n\nparis_predicted <- paris_predicted |> \n  ## Calculate absolute and relative difference between expected and actual score\n  mutate(score_diff_abs = score - exp_score,\n         score_diff_rel = score/exp_score)\n\nparis_predicted |> \n  select(country, gdp_bil, score, exp_score)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 88 × 4\n   country        gdp_bil score exp_score\n   <chr>            <dbl> <dbl>     <dbl>\n 1 United States    25700 12.3      26.1 \n 2 China            17900 10.8      18.3 \n 3 Japan             4260  5.31      4.53\n 4 Australia         1690  5.44      1.95\n 5 France            2780  5.62      3.04\n 6 Netherlands       1010  3.89      1.26\n 7 United Kingdom    3090  5.06      3.36\n 8 South Korea       1670  3.56      1.93\n 9 Italy             2070  3.73      2.33\n10 Germany           4080  3.59      4.35\n# ℹ 78 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npred_data <- data.frame(gdp_bil = seq(min(historical_data_gdp$gdp_bil), max(historical_data_gdp$gdp_bil) + 15000, length.out = 500))\npred_data$score <- as.numeric(predict(model, newdata = pred_data, re.form = NA))\n\nimage_data <- data.frame(ISO3c = c(\"USA\", \"CHN\"),\n                         imgURL = c(\"./data/USAflag.png\",\n                                    \"./data/CHNflag.png\"))\n\nparis_perc_gdp_png <- paris_perc_gdp |> \n  left_join(image_data, by = c(\"ISO3c\")) |> \n  filter(!is.na(imgURL))\n\nggplot() +\n  geomtextpath::geom_textpath(data = pred_data |> \n                                filter(gdp_bil > 6500),\n                              aes(x = gdp_bil, y = score, label = \"Predicted Olympic score\"),\n                              text_only = TRUE, hjust = 0, vjust = 0, size = 3) +\n  geom_line(data = pred_data,\n            aes(x = gdp_bil, y = score)) +\n  geom_ribbon(data = pred_data,\n              aes(x = gdp_bil, ymin = score, ymax = Inf),\n              fill = \"darkgreen\", alpha = 0.25) +\n  geom_ribbon(data = pred_data |> bind_rows(data.frame(gdp_bil = Inf,\n                                                       score = max(pred_data$score))),\n              aes(x = gdp_bil, ymin = score, ymax = -Inf),\n              fill = \"darkred\", alpha = 0.25) +\n  shadowtext::geom_shadowtext(aes(x = c(500, 40000),\n                                  y = c(10, 2),\n                                  label = c(\"Overperformers\", \"Underperformers\")),\n                              fontface = \"bold\", family = \"Chivo\",\n                              colour = c(\"darkgreen\", \"darkred\"),\n                              bg.colour = \"white\") +\n  geom_point(data = paris_perc_gdp,\n             aes(x = gdp_bil, y = score),\n             shape = 21, size = 1.25, stroke = 0.75) +\n  ggimage::geom_image(data = paris_perc_gdp_png,\n                      aes(x = gdp_bil, y = score, image = imgURL), size = 0.05) +\n  geom_text(data = paris_perc_gdp_png,\n            aes(x = gdp_bil*1.5, y = score, label = country),\n            fontface = \"bold\", family = \"Chivo\", hjust = 0, size = 3.5) +\n  labs(title = \"Paris 2024: Expectation v. Reality\",\n       subtitle = \"China and the US performed below expectations given their economic dominance\",\n       y = \"Olympic score (weighted mean of medal %)\", x = \"GDP (Billion $USD)\") +\n  scale_x_log10() +\n  coord_cartesian(ylim = c(-0.1, 15),\n                  xlim = c(min(paris_perc_gdp$gdp_bil) - 0.5, 500000), expand = FALSE) +\n  theme(plot.title = element_text(size = 20, family = \"Chivo\", face = \"bold\"),\n        plot.subtitle = element_text(size = 12, family = \"Chivo\"),\n        plot.margin = margin(t = 10, b = 10, l = 15, r = 15),\n        axis.title = element_text(size = 12, face = \"bold\", family = \"Chivo\"),\n        axis.title.x = element_text(margin = margin(t = 10)),\n        axis.title.y = element_text(margin = margin(r = 10)),\n        axis.text = element_text(colour = \"black\", size = 10, family = \"Chivo\"),\n        plot.background = element_rect(colour = \"black\"),\n        panel.grid = element_line(colour = \"white\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=768}\n:::\n:::\n\n\nIn the above plot, the solid black line shows the predicted Olympic score from our model based on country GDP. Each point shows the *actual* Olympic score of a country at Paris 2024. Points above the line (green area) show countries that scored higher than expected, given their GDP. Points below the line (red area) are countries that had lower scores than our model predicted.\n\nThe first thing we can see is that both China and the US underperformed at this years Olympics, given their economic clout. With only ~12% of Gold medals each, they fell well below the previous records they set as host nations in Beijing 2008 (China: 16.9%) and Atlanta 1996 (USA: 16.2%).\n\n::: {.callout-warning}\nMake sure to notice the *log scale* on the x-axis of the plots. Using a log scale is invaluable to show massive economies like the US on the same plot as much smaller economies; however, remember this means the x-axis does not increase linearly. We actually model a *linear* relationship between GDP and Olympic score (i.e. one $USD change in GDP always has the same effect), but this looks non-linear in the plots due to the log scale.\n:::\n\nBelow this headline, we can see other countries that greatly diverged from our modelled expectations. To look for the biggest over and under-performers at Paris 2024 we calculate the proportional difference between a countries actual score and the expected score from our GDP model.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nbest_and_worst <- paris_predicted |> \n  arrange(score_diff_rel) |> \n  slice(1:5, (n()-4):n()) |> \n  select(country:perc_Total, score, exp_score, score_diff_rel, score_diff_abs)\n\n## Plotting\nylim = c(-0.5, 5)\nxlim = c(20, 7500)\n\npred_data <- data.frame(gdp_bil = seq(min(xlim), max(xlim) + 15000, length.out = 500))\npred_data$score <- as.numeric(predict(model, newdata = pred_data, re.form = NA))\n\nimage_data <- data.frame(ISO3c = best_and_worst$ISO3c,\n                         imgURL = paste0(\"./data/\", best_and_worst$ISO3c, \"flag.png\"))\n\nparis_perc_gdp_png <- paris_perc_gdp |> \n  left_join(image_data, by = c(\"ISO3c\")) |> \n  filter(!is.na(imgURL)) |> \n  mutate(x = case_when(ISO3c == \"QAT\" ~ gdp_bil*0.675,\n                       TRUE ~ gdp_bil * 1.1),\n         y = case_when(ISO3c == \"QAT\" ~ score - 0.2,\n                       TRUE ~ score + 0.2))\n\nggplot() +\n  geomtextpath::geom_textpath(data = pred_data |> \n                                filter(gdp_bil > 1000 & gdp_bil < 7500),\n                              aes(x = gdp_bil, y = score, label = \"Predicted Olympic score\"),\n                              text_only = TRUE, hjust = 0, vjust = 0, size = 3) +\n  geom_line(data = pred_data,\n            aes(x = gdp_bil, y = score)) +\n  geom_ribbon(data = pred_data,\n              aes(x = gdp_bil, ymin = score, ymax = Inf),\n              fill = \"darkgreen\", alpha = 0.25) +\n  geom_ribbon(data = pred_data |> bind_rows(data.frame(gdp_bil = Inf,\n                                                       score = max(pred_data$score))),\n              aes(x = gdp_bil, ymin = score, ymax = -Inf),\n              fill = \"darkred\", alpha = 0.25) +\n  shadowtext::geom_shadowtext(aes(x = c(500, 40000),\n                                  y = c(10, 2),\n                                  label = c(\"Overperformers\", \"Underperformers\")),\n                              fontface = \"bold\", family = \"Chivo\",\n                              colour = c(\"darkgreen\", \"darkred\")) +\n  geom_point(data = paris_perc_gdp,\n             aes(x = gdp_bil, y = score),\n             shape = 21, size = 1.25, stroke = 0.75, alpha = 0.25) +\n  ggimage::geom_image(data = paris_perc_gdp_png,\n                      aes(x = gdp_bil, y = score, image = imgURL), size = 0.075) +\n  geom_text(data = paris_perc_gdp_png,\n            aes(x = x, y = y, label = country),\n            fontface = \"bold\", family = \"Chivo\", hjust = 0, size = 3.5) +\n  labs(title = \"Paris 2024: Expectation v. Reality\",\n       subtitle = \"Uzbekistan scored 5x higher than expected, while India only achieved\\n5% of their expected Olympic score.\",\n       y = \"Olympic score (weighted mean of medal %)\", x = \"GDP (Billion $USD)\") +\n  scale_x_log10() +\n  coord_cartesian(ylim = ylim,\n                  xlim = xlim, expand = FALSE, clip = \"on\") +\n  theme(plot.title = element_text(size = 20, family = \"Chivo\", face = \"bold\"),\n        plot.subtitle = element_text(size = 12, family = \"Chivo\"),\n        plot.margin = margin(t = 10, b = 10, l = 15, r = 15),\n        axis.title = element_text(size = 12, face = \"bold\", family = \"Chivo\"),\n        axis.title.x = element_text(margin = margin(t = 10)),\n        axis.title.y = element_text(margin = margin(r = 10)),\n        axis.text = element_text(colour = \"black\", size = 10, family = \"Chivo\"),\n        plot.background = element_rect(colour = \"black\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=768}\n:::\n:::\n\n\n### The over and underperformers\n\nWe can now see those countries that most exceeded or fell short of their Olympic expectations. The outcome of the New Zealand campaign is a direct comparison to that of Qatar and Peru. In 2023, all three countries had a GDP around 250 billion $USD, yet New Zealand went home with 10 Gold medals while Qatar and Peru failed to win a single Gold or Silver medal.\n\nIndia stands out as a particularly poor performer. The world's 5th largest economy and most populous nation failed to win a single Gold medal. The [return of cricket](https://olympics.com/en/news/cricket-olympics-los-angeles-2028-inclusion-reactions-india) to the Olympic stage for LA28 might present team India with an opportunity to improve their Olympic fortunes. In contrast, Uzbekistan had a particularly impressive performance, snagging 8 gold medals for boxing and martial arts and scoring almost 100x higher than Slovakia despite having a smaller economy.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nflag_db <- readr::read_csv(\"data/Country_Flags.csv\", show_col_type = FALSE) %>% \n  #Convert country names into 3-letter country codes\n  mutate(Code_raw = countrycode(sourcevar = Country, origin = \"country.name\", destination = \"iso3c\", warn = FALSE),\n         ## There are a few cases that need to be specified manually\n         Code = case_when(Country == \"Soviet Union\" ~ \"SUN\",\n                          Country == \"East Germany\" ~ \"DDR\",\n                          Country == \"Yugoslavia\" ~ \"YUG\",\n                          Country == \"Olympics\" ~ \"EUN\",\n                          TRUE ~ Code_raw)) %>% \n  select(Code, flag_URL = ImageURL)\n\nplot_data <- best_and_worst |> \n  mutate(score_diff_rel = score_diff_rel*100) |> \n  select(country, ISO3c, score, exp_score, score_diff_rel) |> \n  left_join(flag_db, by = c(\"ISO3c\" = \"Code\")) |> \n  select(flag_URL, country, score:score_diff_rel) |> \n  arrange(desc(score_diff_rel))\n\nrel_score_palette <- col_numeric(c(\"darkred\", \"darkgreen\"), domain = c(min(plot_data$score_diff_rel),\n                                                                                max(plot_data$score_diff_rel)), alpha = 0.75)\n\nplot_data |> \n  gt() |> \n  cols_label(country = \"Country\",\n             exp_score = \"Expected score\",\n             score = \"Actual score\",\n             score_diff_rel = \"% difference\") %>% \n  tab_header(title = md(\"Paris 2024: Expectation v. Reality\")) %>% \n  tab_source_note(source_note = md(\"Olympic data: www.sports-reference.com<br>GDP data: World Bank Group\")) %>% \n  tab_style(\n    locations = cells_column_labels(columns = everything()),\n    style     = list(\n      cell_borders(sides = \"bottom\", weight = px(3)),\n      cell_text(weight = \"bold\")\n    )\n  ) %>% \n  tab_style(\n    locations = cells_title(groups = \"title\"),\n    style     = list(\n      cell_text(weight = \"bold\", size = 24)\n    )\n  ) %>% \n  data_color(columns = c(score_diff_rel),\n             fn = rel_score_palette) %>%\n  fmt_number(columns = c(score, exp_score),\n             decimals = 2) %>%\n  fmt_number(columns = c(score_diff_rel),\n             decimals = 1, suffixing = \"%\") %>%\n  opt_all_caps() %>% \n  opt_table_font(\n    font = list(\n      google_font(\"Chivo\"),\n      default_fonts()\n    )\n  ) %>%\n  cols_width(c(country) ~ px(125),\n             c(score, exp_score, score_diff_rel) ~ px(100)) %>% \n  tab_options(\n    column_labels.border.top.width = px(3),\n    column_labels.border.top.color = \"transparent\",\n    table.border.top.color = \"transparent\",\n    table.border.bottom.color = \"transparent\",\n    data_row.padding = px(3),\n    source_notes.font.size = 12,\n    heading.align = \"left\") |> \n  gt::text_transform(\n    #Apply a function to a column\n    locations = cells_body(c(flag_URL)),\n    fn = function(x) {\n      #Return an image of set dimensions\n      web_image(\n        url = x,\n        height = 12\n      )\n    }\n  ) %>% \n  #Hide column header flag_URL and reduce width\n  cols_width(c(flag_URL) ~ px(30)) %>% \n  cols_label(flag_URL = \"\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"zqssdihnpz\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>@import url(\"https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n#zqssdihnpz table {\n  font-family: Chivo, system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#zqssdihnpz thead, #zqssdihnpz tbody, #zqssdihnpz tfoot, #zqssdihnpz tr, #zqssdihnpz td, #zqssdihnpz th {\n  border-style: none;\n}\n\n#zqssdihnpz p {\n  margin: 0;\n  padding: 0;\n}\n\n#zqssdihnpz .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: rgba(255, 255, 255, 0);\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: rgba(255, 255, 255, 0);\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#zqssdihnpz .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#zqssdihnpz .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#zqssdihnpz .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#zqssdihnpz .gt_heading {\n  background-color: #FFFFFF;\n  text-align: left;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#zqssdihnpz .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zqssdihnpz .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 3px;\n  border-top-color: rgba(255, 255, 255, 0);\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#zqssdihnpz .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  text-transform: uppercase;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#zqssdihnpz .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  text-transform: uppercase;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#zqssdihnpz .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#zqssdihnpz .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#zqssdihnpz .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#zqssdihnpz .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#zqssdihnpz .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  text-transform: uppercase;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#zqssdihnpz .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#zqssdihnpz .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#zqssdihnpz .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#zqssdihnpz .gt_row {\n  padding-top: 3px;\n  padding-bottom: 3px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#zqssdihnpz .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  text-transform: uppercase;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zqssdihnpz .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#zqssdihnpz .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#zqssdihnpz .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#zqssdihnpz .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zqssdihnpz .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#zqssdihnpz .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#zqssdihnpz .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zqssdihnpz .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zqssdihnpz .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#zqssdihnpz .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zqssdihnpz .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#zqssdihnpz .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zqssdihnpz .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#zqssdihnpz .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zqssdihnpz .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#zqssdihnpz .gt_sourcenote {\n  font-size: 12px;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zqssdihnpz .gt_left {\n  text-align: left;\n}\n\n#zqssdihnpz .gt_center {\n  text-align: center;\n}\n\n#zqssdihnpz .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#zqssdihnpz .gt_font_normal {\n  font-weight: normal;\n}\n\n#zqssdihnpz .gt_font_bold {\n  font-weight: bold;\n}\n\n#zqssdihnpz .gt_font_italic {\n  font-style: italic;\n}\n\n#zqssdihnpz .gt_super {\n  font-size: 65%;\n}\n\n#zqssdihnpz .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#zqssdihnpz .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#zqssdihnpz .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#zqssdihnpz .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#zqssdihnpz .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#zqssdihnpz .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#zqssdihnpz .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" style=\"table-layout: fixed;; width: 0px\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <colgroup>\n    <col style=\"width:30px;\"/>\n    <col style=\"width:125px;\"/>\n    <col style=\"width:100px;\"/>\n    <col style=\"width:100px;\"/>\n    <col style=\"width:100px;\"/>\n  </colgroup>\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"5\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style=\"font-size: 24; font-weight: bold;\">Paris 2024: Expectation v. Reality</td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"\"></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"Country\">Country</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"Actual score\">Actual score</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"Expected score\">Expected score</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"% difference\">% difference</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"flag_URL\" class=\"gt_row gt_left\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/8/84/Flag_of_Uzbekistan.svg\" style=\"height:12px;\"></td>\n<td headers=\"country\" class=\"gt_row gt_left\">Uzbekistan</td>\n<td headers=\"score\" class=\"gt_row gt_right\">1.88</td>\n<td headers=\"exp_score\" class=\"gt_row gt_right\">0.33</td>\n<td headers=\"score_diff_rel\" class=\"gt_row gt_right\" style=\"background-color: #006400; color: #FFFFFF;\">579.0</td></tr>\n    <tr><td headers=\"flag_URL\" class=\"gt_row gt_left\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/3/3e/Flag_of_New_Zealand.svg\" style=\"height:12px;\"></td>\n<td headers=\"country\" class=\"gt_row gt_left\">New Zealand</td>\n<td headers=\"score\" class=\"gt_row gt_right\">2.65</td>\n<td headers=\"exp_score\" class=\"gt_row gt_right\">0.49</td>\n<td headers=\"score_diff_rel\" class=\"gt_row gt_right\" style=\"background-color: #216100; color: #FFFFFF;\">539.0</td></tr>\n    <tr><td headers=\"flag_URL\" class=\"gt_row gt_left\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/c/c1/Flag_of_Hungary.svg\" style=\"height:12px;\"></td>\n<td headers=\"country\" class=\"gt_row gt_left\">Hungary</td>\n<td headers=\"score\" class=\"gt_row gt_right\">1.87</td>\n<td headers=\"exp_score\" class=\"gt_row gt_right\">0.42</td>\n<td headers=\"score_diff_rel\" class=\"gt_row gt_right\" style=\"background-color: #415800; color: #FFFFFF;\">443.8</td></tr>\n    <tr><td headers=\"flag_URL\" class=\"gt_row gt_left\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0f/Flag_of_Georgia.svg\" style=\"height:12px;\"></td>\n<td headers=\"country\" class=\"gt_row gt_left\">Georgia</td>\n<td headers=\"score\" class=\"gt_row gt_right\">0.86</td>\n<td headers=\"exp_score\" class=\"gt_row gt_right\">0.27</td>\n<td headers=\"score_diff_rel\" class=\"gt_row gt_right\" style=\"background-color: #5B4C00; color: #FFFFFF;\">320.4</td></tr>\n    <tr><td headers=\"flag_URL\" class=\"gt_row gt_left\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/2/20/Flag_of_the_Netherlands.svg\" style=\"height:12px;\"></td>\n<td headers=\"country\" class=\"gt_row gt_left\">Netherlands</td>\n<td headers=\"score\" class=\"gt_row gt_right\">3.89</td>\n<td headers=\"exp_score\" class=\"gt_row gt_right\">1.26</td>\n<td headers=\"score_diff_rel\" class=\"gt_row gt_right\" style=\"background-color: #5D4A00; color: #FFFFFF;\">308.2</td></tr>\n    <tr><td headers=\"flag_URL\" class=\"gt_row gt_left\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/e/e6/Flag_of_Slovakia.svg\" style=\"height:12px;\"></td>\n<td headers=\"country\" class=\"gt_row gt_left\">Slovakia</td>\n<td headers=\"score\" class=\"gt_row gt_right\">0.02</td>\n<td headers=\"exp_score\" class=\"gt_row gt_right\">0.36</td>\n<td headers=\"score_diff_rel\" class=\"gt_row gt_right\" style=\"background-color: #8B0200; color: #FFFFFF;\">5.5</td></tr>\n    <tr><td headers=\"flag_URL\" class=\"gt_row gt_left\"><img src=\"https://upload.wikimedia.org/wikipedia/en/4/41/Flag_of_India.svg\" style=\"height:12px;\"></td>\n<td headers=\"country\" class=\"gt_row gt_left\">India</td>\n<td headers=\"score\" class=\"gt_row gt_right\">0.17</td>\n<td headers=\"exp_score\" class=\"gt_row gt_right\">3.62</td>\n<td headers=\"score_diff_rel\" class=\"gt_row gt_right\" style=\"background-color: #8B0200; color: #FFFFFF;\">4.7</td></tr>\n    <tr><td headers=\"flag_URL\" class=\"gt_row gt_left\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/6/65/Flag_of_Qatar.svg\" style=\"height:12px;\"></td>\n<td headers=\"country\" class=\"gt_row gt_left\">Qatar</td>\n<td headers=\"score\" class=\"gt_row gt_right\">0.02</td>\n<td headers=\"exp_score\" class=\"gt_row gt_right\">0.48</td>\n<td headers=\"score_diff_rel\" class=\"gt_row gt_right\" style=\"background-color: #8B0100; color: #FFFFFF;\">4.2</td></tr>\n    <tr><td headers=\"flag_URL\" class=\"gt_row gt_left\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/c/cf/Flag_of_Peru.svg\" style=\"height:12px;\"></td>\n<td headers=\"country\" class=\"gt_row gt_left\">Peru</td>\n<td headers=\"score\" class=\"gt_row gt_right\">0.02</td>\n<td headers=\"exp_score\" class=\"gt_row gt_right\">0.49</td>\n<td headers=\"score_diff_rel\" class=\"gt_row gt_right\" style=\"background-color: #8B0100; color: #FFFFFF;\">4.1</td></tr>\n    <tr><td headers=\"flag_URL\" class=\"gt_row gt_left\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/4/48/Flag_of_Singapore.svg\" style=\"height:12px;\"></td>\n<td headers=\"country\" class=\"gt_row gt_left\">Singapore</td>\n<td headers=\"score\" class=\"gt_row gt_right\">0.02</td>\n<td headers=\"exp_score\" class=\"gt_row gt_right\">0.75</td>\n<td headers=\"score_diff_rel\" class=\"gt_row gt_right\" style=\"background-color: #8B0000; color: #FFFFFF;\">2.7</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" colspan=\"5\">Olympic data: <a href=\"http://www.sports-reference.com\">www.sports-reference.com</a><br>GDP data: World Bank Group</td>\n    </tr>\n  </tfoot>\n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n</br>\n\n## The Conclusion: The winners board\n\n---\n\nA simple model with national GDP is a fairly crude method to estimate Olympic performance. It doesn't account for a countries level of development and how much of GDP is invested in sports. In the case of India, it also fails to consider whether the sports invested in (i.e. cricket) are included in the Olympics. Some metric like the [UNDP Human Development Index](https://hdr.undp.org/data-center/human-development-index#/indicies/HDI) might be one way to include more details about each country. Still, GDP does begin to account for a country's availabe resources that could go towards training Olympic athletes, and does seem to provide some (basic) predictive power. Adding more sophisticated data would be ideal, but finding this type of data for close to 100 countries is easier said than done. Maybe we can reconvene again in 4 years time to refine and improve our Olympic modelling.\n\n</br>\n</br>\n\n---\n\n## Appendix: Assessing our single Olympic Score\n\n---\n\nHow does our weighted Olympics Score&trade; compare to traditional medal tally ranks?\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nflag_db <- readr::read_csv(\"data/Country_Flags.csv\", show_col_type = FALSE) %>% \n  #Convert country names into 3-letter country codes\n  mutate(Code_raw = countrycode(sourcevar = Country, origin = \"country.name\", destination = \"iso3c\", warn = FALSE),\n         ## There are a few cases that need to be specified manually\n         Code = case_when(Country == \"Soviet Union\" ~ \"SUN\",\n                          Country == \"East Germany\" ~ \"DDR\",\n                          Country == \"Yugoslavia\" ~ \"YUG\",\n                          Country == \"Olympics\" ~ \"EUN\",\n                          TRUE ~ Code_raw)) %>% \n  select(Code, flag_URL = ImageURL)\n\nscore_diffs <- historical_data_score |> \n  arrange(desc(Year), desc(perc_Gold), desc(perc_Silver), desc(perc_Bronze)) |> \n  group_by(Year) |> \n  mutate(trad_rank = 1:n()) |> \n  ungroup() |> \n  arrange(desc(Year), desc(score)) |> \n  group_by(Year) |> \n  mutate(score_rank = 1:n()) |> \n  ungroup() |> \n  mutate(score_diff = trad_rank - score_rank) |> \n  arrange(desc(score_diff))\n\nplot_data <- score_diffs |> \n  slice(1:5, (n()-4):n()) |> \n  left_join(flag_db, by = c(\"ISO3c\" = \"Code\")) |> \n  select(flag_URL, Year, country, perc_Gold:score_diff)\n\nrank_change_palette <- col_numeric(c(\"darkred\", \"white\", \"darkgreen\"), domain = c(min(score_diffs$score_diff),\n                                                                                  max(score_diffs$score_diff)), alpha = 0.75)\n\nplot_data |> \n  gt() |> \n  cols_label(country = \"Country\",\n             perc_Gold = \"Gold (%)\",\n             perc_Silver = \"Silver (%)\",\n             perc_Bronze = \"Bronze (%)\",\n             score = \"Score\",\n             trad_rank = \"Rank (traditional)\",\n             score_rank = \"Rank (score)\",\n             score_diff = \"Difference\") %>% \n  tab_header(title = md(\"Largest changes in Olympic rank\"),\n             subtitle = paste0(\"Correlation: \",\n                               round(cor(score_diffs$trad_rank,\n                                         score_diffs$score_rank,\n                                         ## Kendall better suited for rank data\n                                         method = \"kendall\"), 2))) %>% \n  tab_source_note(source_note = \"Data: www.sports-reference.com\") %>% \n  tab_style(\n    locations = cells_column_labels(columns = everything()),\n    style     = list(\n      cell_borders(sides = \"bottom\", weight = px(3)),\n      cell_text(weight = \"bold\")\n    )\n  ) %>% \n  tab_style(\n    locations = cells_title(groups = \"title\"),\n    style     = list(\n      cell_text(weight = \"bold\", size = 24)\n    )\n  ) %>% \n  data_color(columns = c(score_diff),\n             fn = rank_change_palette) %>%\n  fmt_number(columns = c(perc_Gold, perc_Silver, perc_Bronze, score),\n             decimals = 2) %>%\n  opt_all_caps() %>% \n  opt_table_font(\n    font = list(\n      google_font(\"Chivo\"),\n      default_fonts()\n    )\n  ) %>%\n  cols_width(c(country) ~ px(175),\n             c(perc_Gold,\n               perc_Silver,\n               perc_Bronze,\n               score) ~ px(100)) %>% \n  tab_options(\n    column_labels.border.top.width = px(3),\n    column_labels.border.top.color = \"transparent\",\n    table.border.top.color = \"transparent\",\n    table.border.bottom.color = \"transparent\",\n    data_row.padding = px(3),\n    source_notes.font.size = 12,\n    heading.align = \"left\") |> \n  gt::text_transform(\n    #Apply a function to a column\n    locations = cells_body(c(flag_URL)),\n    fn = function(x) {\n      #Return an image of set dimensions\n      web_image(\n        url = x,\n        height = 12\n      )\n    }\n  ) %>% \n  #Hide column header flag_URL and reduce width\n  cols_width(c(flag_URL) ~ px(30)) %>% \n  cols_label(flag_URL = \"\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"nyfeepisib\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>@import url(\"https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n#nyfeepisib table {\n  font-family: Chivo, system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#nyfeepisib thead, #nyfeepisib tbody, #nyfeepisib tfoot, #nyfeepisib tr, #nyfeepisib td, #nyfeepisib th {\n  border-style: none;\n}\n\n#nyfeepisib p {\n  margin: 0;\n  padding: 0;\n}\n\n#nyfeepisib .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: rgba(255, 255, 255, 0);\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: rgba(255, 255, 255, 0);\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#nyfeepisib .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#nyfeepisib .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#nyfeepisib .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#nyfeepisib .gt_heading {\n  background-color: #FFFFFF;\n  text-align: left;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#nyfeepisib .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nyfeepisib .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 3px;\n  border-top-color: rgba(255, 255, 255, 0);\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#nyfeepisib .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  text-transform: uppercase;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#nyfeepisib .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  text-transform: uppercase;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#nyfeepisib .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#nyfeepisib .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#nyfeepisib .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#nyfeepisib .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#nyfeepisib .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  text-transform: uppercase;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#nyfeepisib .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#nyfeepisib .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#nyfeepisib .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#nyfeepisib .gt_row {\n  padding-top: 3px;\n  padding-bottom: 3px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#nyfeepisib .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  text-transform: uppercase;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nyfeepisib .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#nyfeepisib .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#nyfeepisib .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#nyfeepisib .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nyfeepisib .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#nyfeepisib .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#nyfeepisib .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nyfeepisib .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nyfeepisib .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#nyfeepisib .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nyfeepisib .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#nyfeepisib .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nyfeepisib .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#nyfeepisib .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nyfeepisib .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#nyfeepisib .gt_sourcenote {\n  font-size: 12px;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nyfeepisib .gt_left {\n  text-align: left;\n}\n\n#nyfeepisib .gt_center {\n  text-align: center;\n}\n\n#nyfeepisib .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#nyfeepisib .gt_font_normal {\n  font-weight: normal;\n}\n\n#nyfeepisib .gt_font_bold {\n  font-weight: bold;\n}\n\n#nyfeepisib .gt_font_italic {\n  font-style: italic;\n}\n\n#nyfeepisib .gt_super {\n  font-size: 65%;\n}\n\n#nyfeepisib .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#nyfeepisib .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#nyfeepisib .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#nyfeepisib .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#nyfeepisib .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#nyfeepisib .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#nyfeepisib .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" style=\"table-layout: fixed;\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <colgroup>\n    <col style=\"width:30px;\"/>\n    <col/>\n    <col style=\"width:175px;\"/>\n    <col style=\"width:100px;\"/>\n    <col style=\"width:100px;\"/>\n    <col style=\"width:100px;\"/>\n    <col style=\"width:100px;\"/>\n    <col/>\n    <col/>\n    <col/>\n  </colgroup>\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"10\" class=\"gt_heading gt_title gt_font_normal\" style=\"font-size: 24; font-weight: bold;\">Largest changes in Olympic rank</td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"10\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style>Correlation: 0.99</td>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"\"></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"Year\">Year</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"Country\">Country</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"Gold (%)\">Gold (%)</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"Silver (%)\">Silver (%)</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"Bronze (%)\">Bronze (%)</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"Score\">Score</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"Rank (traditional)\">Rank (traditional)</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"Rank (score)\">Rank (score)</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"Difference\">Difference</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"flag_URL\" class=\"gt_row gt_left\"><img src=\"https://upload.wikimedia.org/wikipedia/en/0/05/Flag_of_Brazil.svg\" style=\"height:12px;\"></td>\n<td headers=\"Year\" class=\"gt_row gt_right\">2000</td>\n<td headers=\"country\" class=\"gt_row gt_left\">Brazil</td>\n<td headers=\"perc_Gold\" class=\"gt_row gt_right\">0.00</td>\n<td headers=\"perc_Silver\" class=\"gt_row gt_right\">2.00</td>\n<td headers=\"perc_Bronze\" class=\"gt_row gt_right\">1.84</td>\n<td headers=\"score\" class=\"gt_row gt_right\">0.60</td>\n<td headers=\"trad_rank\" class=\"gt_row gt_right\">53</td>\n<td headers=\"score_rank\" class=\"gt_row gt_right\">32</td>\n<td headers=\"score_diff\" class=\"gt_row gt_right\" style=\"background-color: #006400; color: #FFFFFF;\">21</td></tr>\n    <tr><td headers=\"flag_URL\" class=\"gt_row gt_left\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0a/Flag_of_Jamaica.svg\" style=\"height:12px;\"></td>\n<td headers=\"Year\" class=\"gt_row gt_right\">2000</td>\n<td headers=\"country\" class=\"gt_row gt_left\">Jamaica</td>\n<td headers=\"perc_Gold\" class=\"gt_row gt_right\">0.00</td>\n<td headers=\"perc_Silver\" class=\"gt_row gt_right\">2.00</td>\n<td headers=\"perc_Bronze\" class=\"gt_row gt_right\">0.92</td>\n<td headers=\"score\" class=\"gt_row gt_right\">0.53</td>\n<td headers=\"trad_rank\" class=\"gt_row gt_right\">54</td>\n<td headers=\"score_rank\" class=\"gt_row gt_right\">36</td>\n<td headers=\"score_diff\" class=\"gt_row gt_right\" style=\"background-color: #49843C; color: #FFFFFF;\">18</td></tr>\n    <tr><td headers=\"flag_URL\" class=\"gt_row gt_left\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/2/2f/Flag_of_Armenia.svg\" style=\"height:12px;\"></td>\n<td headers=\"Year\" class=\"gt_row gt_right\">2008</td>\n<td headers=\"country\" class=\"gt_row gt_left\">Armenia</td>\n<td headers=\"perc_Gold\" class=\"gt_row gt_right\">0.00</td>\n<td headers=\"perc_Silver\" class=\"gt_row gt_right\">0.00</td>\n<td headers=\"perc_Bronze\" class=\"gt_row gt_right\">1.70</td>\n<td headers=\"score\" class=\"gt_row gt_right\">0.13</td>\n<td headers=\"trad_rank\" class=\"gt_row gt_right\">78</td>\n<td headers=\"score_rank\" class=\"gt_row gt_right\">61</td>\n<td headers=\"score_diff\" class=\"gt_row gt_right\" style=\"background-color: #5A8F4D; color: #FFFFFF;\">17</td></tr>\n    <tr><td headers=\"flag_URL\" class=\"gt_row gt_left\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/d/dd/Flag_of_Azerbaijan.svg\" style=\"height:12px;\"></td>\n<td headers=\"Year\" class=\"gt_row gt_right\">2016</td>\n<td headers=\"country\" class=\"gt_row gt_left\">Azerbaijan</td>\n<td headers=\"perc_Gold\" class=\"gt_row gt_right\">0.33</td>\n<td headers=\"perc_Silver\" class=\"gt_row gt_right\">2.29</td>\n<td headers=\"perc_Bronze\" class=\"gt_row gt_right\">2.78</td>\n<td headers=\"score\" class=\"gt_row gt_right\">0.97</td>\n<td headers=\"trad_rank\" class=\"gt_row gt_right\">39</td>\n<td headers=\"score_rank\" class=\"gt_row gt_right\">25</td>\n<td headers=\"score_diff\" class=\"gt_row gt_right\" style=\"background-color: #8BB07F; color: #000000;\">14</td></tr>\n    <tr><td headers=\"flag_URL\" class=\"gt_row gt_left\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/b/bd/Flag_of_Cuba.svg\" style=\"height:12px;\"></td>\n<td headers=\"Year\" class=\"gt_row gt_right\">2008</td>\n<td headers=\"country\" class=\"gt_row gt_left\">Cuba</td>\n<td headers=\"perc_Gold\" class=\"gt_row gt_right\">0.66</td>\n<td headers=\"perc_Silver\" class=\"gt_row gt_right\">3.64</td>\n<td headers=\"perc_Bronze\" class=\"gt_row gt_right\">3.12</td>\n<td headers=\"score\" class=\"gt_row gt_right\">1.54</td>\n<td headers=\"trad_rank\" class=\"gt_row gt_right\">28</td>\n<td headers=\"score_rank\" class=\"gt_row gt_right\">15</td>\n<td headers=\"score_diff\" class=\"gt_row gt_right\" style=\"background-color: #9CBB91; color: #000000;\">13</td></tr>\n    <tr><td headers=\"flag_URL\" class=\"gt_row gt_left\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b4/Flag_of_Turkey.svg\" style=\"height:12px;\"></td>\n<td headers=\"Year\" class=\"gt_row gt_right\">1996</td>\n<td headers=\"country\" class=\"gt_row gt_left\">Turkey</td>\n<td headers=\"perc_Gold\" class=\"gt_row gt_right\">1.48</td>\n<td headers=\"perc_Silver\" class=\"gt_row gt_right\">0.37</td>\n<td headers=\"perc_Bronze\" class=\"gt_row gt_right\">0.34</td>\n<td headers=\"score\" class=\"gt_row gt_right\">1.13</td>\n<td headers=\"trad_rank\" class=\"gt_row gt_right\">20</td>\n<td headers=\"score_rank\" class=\"gt_row gt_right\">25</td>\n<td headers=\"score_diff\" class=\"gt_row gt_right\" style=\"background-color: #A13523; color: #FFFFFF;\">-5</td></tr>\n    <tr><td headers=\"flag_URL\" class=\"gt_row gt_left\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/7/73/Flag_of_Romania.svg\" style=\"height:12px;\"></td>\n<td headers=\"Year\" class=\"gt_row gt_right\">2008</td>\n<td headers=\"country\" class=\"gt_row gt_left\">Romania</td>\n<td headers=\"perc_Gold\" class=\"gt_row gt_right\">1.32</td>\n<td headers=\"perc_Silver\" class=\"gt_row gt_right\">0.33</td>\n<td headers=\"perc_Bronze\" class=\"gt_row gt_right\">0.85</td>\n<td headers=\"score\" class=\"gt_row gt_right\">1.06</td>\n<td headers=\"trad_rank\" class=\"gt_row gt_right\">17</td>\n<td headers=\"score_rank\" class=\"gt_row gt_right\">23</td>\n<td headers=\"score_diff\" class=\"gt_row gt_right\" style=\"background-color: #962113; color: #FFFFFF;\">-6</td></tr>\n    <tr><td headers=\"flag_URL\" class=\"gt_row gt_left\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/7/71/Flag_of_Ethiopia.svg\" style=\"height:12px;\"></td>\n<td headers=\"Year\" class=\"gt_row gt_right\">2008</td>\n<td headers=\"country\" class=\"gt_row gt_left\">Ethiopia</td>\n<td headers=\"perc_Gold\" class=\"gt_row gt_right\">1.32</td>\n<td headers=\"perc_Silver\" class=\"gt_row gt_right\">0.33</td>\n<td headers=\"perc_Bronze\" class=\"gt_row gt_right\">0.57</td>\n<td headers=\"score\" class=\"gt_row gt_right\">1.04</td>\n<td headers=\"trad_rank\" class=\"gt_row gt_right\">18</td>\n<td headers=\"score_rank\" class=\"gt_row gt_right\">24</td>\n<td headers=\"score_diff\" class=\"gt_row gt_right\" style=\"background-color: #962113; color: #FFFFFF;\">-6</td></tr>\n    <tr><td headers=\"flag_URL\" class=\"gt_row gt_left\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/5/5c/Flag_of_Greece.svg\" style=\"height:12px;\"></td>\n<td headers=\"Year\" class=\"gt_row gt_right\">2016</td>\n<td headers=\"country\" class=\"gt_row gt_left\">Greece</td>\n<td headers=\"perc_Gold\" class=\"gt_row gt_right\">0.98</td>\n<td headers=\"perc_Silver\" class=\"gt_row gt_right\">0.33</td>\n<td headers=\"perc_Bronze\" class=\"gt_row gt_right\">0.56</td>\n<td headers=\"score\" class=\"gt_row gt_right\">0.79</td>\n<td headers=\"trad_rank\" class=\"gt_row gt_right\">26</td>\n<td headers=\"score_rank\" class=\"gt_row gt_right\">33</td>\n<td headers=\"score_diff\" class=\"gt_row gt_right\" style=\"background-color: #8B0000; color: #FFFFFF;\">-7</td></tr>\n    <tr><td headers=\"flag_URL\" class=\"gt_row gt_left\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/1/1a/Flag_of_Argentina.svg\" style=\"height:12px;\"></td>\n<td headers=\"Year\" class=\"gt_row gt_right\">2016</td>\n<td headers=\"country\" class=\"gt_row gt_left\">Argentina</td>\n<td headers=\"perc_Gold\" class=\"gt_row gt_right\">0.98</td>\n<td headers=\"perc_Silver\" class=\"gt_row gt_right\">0.33</td>\n<td headers=\"perc_Bronze\" class=\"gt_row gt_right\">0.00</td>\n<td headers=\"score\" class=\"gt_row gt_right\">0.75</td>\n<td headers=\"trad_rank\" class=\"gt_row gt_right\">27</td>\n<td headers=\"score_rank\" class=\"gt_row gt_right\">34</td>\n<td headers=\"score_diff\" class=\"gt_row gt_right\" style=\"background-color: #8B0000; color: #FFFFFF;\">-7</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" colspan=\"10\">Data: www.sports-reference.com</td>\n    </tr>\n  </tfoot>\n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\nWe can see the most extreme differences between ranks with our Olympic score&trade; and traditional rankings in the table above. Our Olympic score tends to provide more rewards for lesser medals. For example, at Sydney 2000 Brazil failed to win any Golds, but received around 2% of both Silver and Bronze medals and is given a boost with our Olympic score. Conversely, at Rio 2016 Argentina won 3 gold medals (0.98% of all available Golds) but won very few other medals and so is ranked down using our Olympic score. Still, ranks using the different methods are highly correlated (Kendall's $\\tau$: 0.99) and 78% of countries see no rank change at all. This gives us some confidence to use our singular Olympic Score&trade; for further analyses.",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}