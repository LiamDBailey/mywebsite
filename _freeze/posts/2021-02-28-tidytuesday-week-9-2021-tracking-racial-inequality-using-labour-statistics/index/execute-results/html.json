{
  "hash": "6caebf2c3b1251d9bdf350cb2f855c54",
  "result": {
    "markdown": "---\ntitle: TidyTuesday - Week 9, 2021\nauthor: Liam D. Bailey\ndate: '2021-02-28'\ndescription: \"Tracking racial inequality using labour statistics\"\ncategories: [R, Data viz, TidyTuesday]\nimage: \"featured.png\"\n---\n\n\n\n\n---\n\nThis will hopefully be the first in many [TidyTuesday](https://github.com/rfordatascience/tidytuesday) data visualization posts! This week I joined the TidyTuesday group at [CorrelAid](https://correlaid.org/) to brainstorm and troubleshoot ideas. You can see the plots from all the CorrelAid TidyTuesday meetups [here](https://tidytuesday.correlaid.org/). \n\n</br>\n\n## Introduction: Analysing income inequality\n\n---\n\nIncome and wealth inequality in the world's major economies has become an increasing concern over the past decade  [[1](https://www.pewresearch.org/social-trends/2020/01/09/trends-in-income-and-wealth-inequality), [2](http://www.oecd.org/social/inequality.htm), [3](https://www.imf.org/en/Topics/Inequality#:~:text=Global%20inequality%20has%20fallen%20in,for%20sustained%20long%2Dterm%20growth.)]. We often see income inequality quantified using tools such as the [Gini Coeffient](https://data.oecd.org/inequality/income-inequality.htm) or other [more complex metrics](https://doi.org/10.1086/316995), which compare the income of all individuals across society. Unfortunately, broad societal metrics often fail to highlight other inequalities between subgroups, such as [gender](https://ec.europa.eu/info/policies/justice-and-fundamental-rights/gender-equality/equal-pay/gender-pay-gap-situation-eu_en) and [race](https://www.federalreserve.gov/econres/notes/feds-notes/disparities-in-wealth-by-race-and-ethnicity-in-the-2019-survey-of-consumer-finances-20200928.htm). In this week's TidyTuesday, I visualise a rough metric of racial inequality in the US since 2010, and demonstrate how things have become more unequal over time.\n\n</br>\n  \n## Setup: Data and packages\n\n---\n  \nTidyTuesday Week 9 (2021) used employment and earning data from the US Bureau of Labor Statistics collected since 2010. There are a number of interesting ways we can wrangle and visualise this data, I'll focus on racial inequality in income. We won't need many advanced packages for this:\n  \n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidytuesdayR) #To download the data\nlibrary(dplyr) #For data wrangling\nlibrary(ggplot2) #For plotting\nlibrary(showtext) #Use fonts stored on the Google Fonts database\n```\n:::\n\n\nTo start with we need to download the data and separate out employment and earnings data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tt_load(2021, week = 9)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDownloading file 1 of 2: `earn.csv`\n\tDownloading file 2 of 2: `employed.csv`\n```\n:::\n\n```{.r .cell-code}\nemployed <- tuesdata$employed\nearn     <- tuesdata$earn\n```\n:::\n\n\nWe'll create a custom ggplot theme so we don't need to make these aesthetic changes in every plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_theme <- function(){\n  \n  theme_classic() %+replace% \n    #Remove legend by default\n    theme(legend.position = \"none\",\n          #Make axes black\n          axis.text = element_text(colour = \"black\"),\n          #Make clear titles and caption\n          plot.title = element_text(size = 18, face = \"bold\", hjust = 0),\n          plot.caption = element_text(size = 8, hjust = 1))\n  \n}\n```\n:::\n\n\n</br>\n  \n## Exploration: How does the data look?\n\n---\n  \nMy idea was to look at racial differences in income, so we'll focus on the `earn` data frame. Before we go any further, we need to have a quick look at the data and see how it's structured.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(earn)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  sex       race  ethnic_origin age    year quarter n_persons median_weekly_earn\n  <chr>     <chr> <chr>         <chr> <dbl>   <dbl>     <dbl>              <dbl>\n1 Both Sex… All … All Origins   16 y…  2010       1  96821000                754\n2 Both Sex… All … All Origins   16 y…  2010       2  99798000                740\n3 Both Sex… All … All Origins   16 y…  2010       3 101385000                740\n4 Both Sex… All … All Origins   16 y…  2010       4 100120000                752\n5 Both Sex… All … All Origins   16 y…  2011       1  98329000                755\n6 Both Sex… All … All Origins   16 y…  2011       2 100593000                753\n```\n:::\n:::\n\n\nI can already see a few difficulties! Firstly, the columns sex, race, and age include aggregate categories like 'Both Sexes' and 'All Races'. We need to be careful how we deal with these columns so we don't double count individuals. To start with, we'll group all ages and sexes and just look at racial differences. Secondly, out measure of 'time' is separated into two columns 'year' and 'quarter'. If we want to analyse trends over time we'll need to combine these two pieces of information. We can create an aggregate 'time' column where each financial quarter is added to year as a fraction (e.g. 2010 quarter 1 = 2010.0, 2010 quarter 2 = 2010.25).\n\n*Note:* 'Hispanic' does not fit neatly within the 'race' categories and is instead included under 'ethnic_origin'. For simplicity we'll be ignoring this column, but we are likely missing some nuance by doing so!\n  \n\n::: {.cell}\n\n```{.r .cell-code}\nplot_data <- earn %>%\n  #Consider aggregate groups for sex and age, but separate race.\n  filter(sex == \"Both Sexes\" & race != \"All Races\" & age == \"16 years and over\") %>% \n  #Create new time column (combine year and quarter)\n  mutate(time = year + (quarter-1)/4)\n```\n:::\n\n\n</br>\n  \n## Initial plots: What can we see when we start plotting?\n\n---\n  \nNow we've got our data we can start plotting. I find it's always best to visualise the data in as simple a format as possible before we try to achieve anything more complex and I always like the violin/boxplot combination as a first step.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = plot_data) +\n  geom_violin(aes(x = race, y = median_weekly_earn, fill = race),\n              colour = \"black\", width = 0.75) +\n  geom_boxplot(aes(x = race, y = median_weekly_earn),\n               colour = \"black\", width = 0.15, alpha = 0.25) +\n  scale_fill_manual(values = c(\"#DD5844\", \"#67B689\", \"#4383B4\")) +\n  labs(x = \"\", y = \"Median weekly income (USD$)\",\n       title = \"Comparison of earnings between racial groups\",\n       subtitle = \"\",\n       caption = \"Data: www.bls.gov | Plot: @ldbailey255\") +\n  my_theme()\n```\n:::\n\n\n\n\n![](fig1.png)\n\nWe can already clearly see a difference in income between racial groups at this very broad aggregation. Has this improved or worsened over the past decade? We can break our plot down into individual quarters to show how income in the three racial groups has changed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = plot_data) +\n  geom_col(aes(x = time, y = median_weekly_earn, fill = race),\n           colour = \"black\") +\n  scale_fill_manual(values = c(\"#DD5844\", \"#67B689\", \"#4383B4\"), name = \"Race:\") +\n  scale_x_continuous(breaks = seq(2010, 2021, 1)) +\n  labs(x = \"\", y = \"Median weekly income (USD$)\",\n       title = \"Change in income over time\",\n       subtitle = \"\",\n       caption = \"Data: www.bls.gov | Plot: @ldbailey255\") +\n  my_theme() +\n  #Legend would be useful here\n  theme(legend.position = \"bottom\")\n```\n:::\n\n\n\n\n![](fig2.png)\n\n</br>\n  \n## Digging deeper: Quantifying inequality\n\n---\n  \nIt looks like inequality has worsened over time, with earnings for those who identify as Asian appearing to increase more rapidly than Black or White. If we're really interested in visualising this trend, we need some way to quantify the level of racial income inequality at any time point.\n\nA crude (but easy!) way we can do this is just to look at the proportional difference between the lowest and highest income group. If racial income inequality is small, we should get a value close to 1. When inequality is large, this number will be below 1 as the income from the lowest earning group will be only a fraction of the higher earning group.\n\n*Note:* Our measure seeks to identify racial income inequality regardless of who the lowest and highest earning racial group is in any quarter. Although it doesn't occur in this data, it's possible that the lowest and/or highest earning group could change over time!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_data_inequality <- plot_data %>% \n  #For every quarter, determine the ratio betwen lowest and highest earner\n  group_by(time) %>% \n  summarise(income_ratio = min(median_weekly_earn)/max(median_weekly_earn))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = plot_data_inequality) +\n  geom_line(aes(x = time, y = income_ratio), colour = \"#193D58\", size = 1) +\n  geom_hline(aes(yintercept = 1), lty = 2) +\n  geom_text(aes(x = mean(plot_data_inequality$time), y = 0.99, label = \"Income parity\"), size = 5) +\n  scale_x_continuous(breaks = seq(2010, 2021, 1)) +\n  labs(x = \"\", y = \"Racial income inequality\",\n       title = \"Change in racial inequality over time\",\n       subtitle = \"\",\n       caption = \"Data: www.bls.gov | Plot: @ldbailey255\") +\n  my_theme()\n```\n:::\n\n\n\n\n![](fig3.png)\n\nIn 2010, our measure of racial inequality gives a value around 0.75, meaning that the lowest earning group (Black) earned on average only 75% of the highest earning group (Asian). By 2020, this number was closer to 65%, a change of 10 percentage points! It seems that racial inequality is getting worse, but is this the same for both sexes? To answer this we'll have to go back to the original data and include separate male and female data rather than 'Both Sexes'. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ninequality_by_sex <- earn %>% \n  filter(sex != \"Both Sexes\" & race != \"All Races\" & age == \"16 years and over\") %>% \n  #Create a time values (combine year and quarter)\n  mutate(time = year + quarter/4) %>% \n  #Racial income inequality at each time point for each sex\n  group_by(sex, time) %>% \n  summarise(income_ratio = min(median_weekly_earn)/max(median_weekly_earn), .groups = \"drop\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_line(data = inequality_by_sex, aes(x = time, y = income_ratio, colour = sex), size = 0.75) +\n  labs(x = \"\", y = \"Racial income inequality\",\n       title = \"Change in racial inequality for men and women\",\n       subtitle = \"\",\n       caption = \"Data: www.bls.gov | Plot: @ldbailey255\") +\n  geom_hline(aes(yintercept = 1), lty = 2) +\n  geom_text(aes(x = mean(inequality_by_sex$time), y = 0.99, label = \"Income parity\"), size = 5) +\n  scale_colour_manual(name = \"Sex\", values = c(\"#266742\", \"#3255A2\")) +\n  scale_x_continuous(breaks = seq(2010, 2021, 1)) +\n  scale_y_continuous(limits = c(NA, 1)) +\n  my_theme() +\n  theme(legend.position = \"right\")\n```\n:::\n\n\n\n\n![](fig4.png)\n\nInterestingly, we see that racial income inequality is less severe in women (although it has also become worse over time). *Note:* This doesn't show that women earn *more*, just that the difference in income due to race is less for women!\n\n</br>\n\n## The finishing touches: Making things look pretty\n\n---\n\nThis a really interesting result, and a good foundation for a TidyTuesday submission. Now we just need to make it prettier. One issue for somebody viewing this data is the large quarter to quarter variation in our inequality measure. We can perhaps visualise the trends a little better by creating a rolling mean of inequality over 3 quarters. We can also add custom fonts and more informative titles/subtitles to make the plot easier to read.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Create rolling mean data\nrolling_mean <- inequality_by_sex %>% \n  group_by(sex) %>% \n  mutate(lag1 = lag(income_ratio),\n         lead1 = lead(income_ratio)) %>% \n  rowwise() %>% \n  mutate(rollingmean = mean(c(income_ratio, lag1, lead1)))\n\n#Add sex symbols at last point to remove the legend\ninequality_by_sex %>% \n  group_by(sex) %>% \n  slice(n()) %>% \n  ungroup() %>% \n  mutate(time = time + 0.5,\n         sex_symbol = c(\"\\u2642\", \"\\u2640\")) -> sex_symbol\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Load a font from Google Fonts\nsysfonts::font_add_google(\"Oswald\", \"Oswald\", regular.wt = 300)\nsysfonts::font_add_google(\"Ubuntu Mono\", \"Ubuntu Mono\")\n\n#Specify that the showtext package should be used\n#for rendering text\nshowtext::showtext_auto()\n\nggplot() +\n  geom_line(data = inequality_by_sex, aes(x = time, y = income_ratio, group = sex),\n            colour = \"grey50\", size = 1, alpha = 0.5) +\n  geom_line(data = rolling_mean, aes(x = time, y = rollingmean, colour = sex), size = 2) +\n  labs(x = \"\", y = \"<- Less equal                           More equal ->\",\n       title = \"Racial income inequality in the USA\",\n       subtitle = \"Ratio between the income of the lowest and highest earning racial group\",\n       caption = \"Data: www.bls.gov | Plot: @ldbailey255\") +\n  geom_hline(aes(yintercept = 1), lty = 2) +\n  geom_text(aes(x = mean(inequality_by_sex$time), y = 0.98, label = \"Income parity\"),\n            size = 7, family = \"Oswald\") +\n  geom_text(data = sex_symbol, aes(x = time, y = income_ratio, label = sex_symbol), size = 17) +\n  scale_colour_manual(name = \"Sex\", values = c(\"#266742\", \"#3255A2\")) +\n  scale_x_continuous(breaks = seq(2010, 2021, 1)) +\n  scale_y_continuous(limits = c(NA, 1)) +\n  theme_classic() +\n  theme(legend.position = \"none\",\n        axis.title.y = element_text(face = \"bold\", vjust = 0.9, size = 18, family = \"Oswald\"),\n        axis.text = element_text(colour = \"black\", size = 12, family = \"Oswald\"),\n        plot.title = element_text(face = \"bold\", size = 32, family = \"Oswald\"),\n        plot.subtitle = element_text(size = 20, family = \"Oswald\"),\n        plot.caption = element_text(size = 10, family = \"Ubuntu Mono\"))\n```\n:::\n\n\n![](featured.png)\n\n</br>\n\n## Conclusion:\n\n---\n\nThis plot isn't the most technically difficult, we're just using basic `geom_xxx()` functions, but we used a bit of data wrangling to extract more information from some messy original data and present an interesting (and troubling) story.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}